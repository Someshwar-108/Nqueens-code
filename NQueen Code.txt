#include <stdio.h>
#include<math.h>
#include<stdlib.h>

int x[10],k,col;
int count=0;

int main()
{
	int n,i,j;
	void NQueen(int k,int n);
	
	printf("-N Queens Problem Using Backtracking-");
	printf("\n\nEnter the no of Queens\n");
	scanf("%d",&n);
	NQueen(1,n);
	return 0;
	
}
void display(int n)
{
    int i,j;
	printf("\n\n Solution %d:\n\n",++count);
	for(i=0;i<=n;++i){
		printf("\t%d",i);
	}
	for(i=1;i<=n;++i){
	    printf("\n\n%d",i);
	    for(j=1;j<=n;++j)  //for nxn board
	    {
	        if(x[i]==j)
	        printf("\tQ"); //Queen at i,j position
	        else
	        printf("\t-"); //empty slot
	    }
	}
}

/*Function to check conflicts ,if no conlict for desired position returns 1 otherwise 0 */
int place(int k,int col)
{
    int i;
	for(i=1;i<=k-1;++i){
	//Checking column and diagonal conflicts
	if(x[i]==col||abs(x[i]-col)==abs(i-k))
	  return 0;
}
return 1; //No conflicts
}
//Function to check for proper positioning of queen
void NQueen(int k,int n){
    int col;
	for (col=1;col<=n;++col)
	{
		if(place(k,col))
		{
			x[k]=col; //no conflicts so place queen 
			if(k==n)   //dead end
			display(n); //Printing the board configuration
			else          //try queen with next position
				NQueen(k+1,n);
			
		}
		
	}
}

